name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run linting
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Run type checking
      run: |
        uv run mypy ai_sleepwalker

    - name: Run unit tests
      run: |
        uv run pytest tests/ -v -m "unit" --tb=short

    - name: Run integration tests
      run: |
        uv run pytest tests/ -v -m "integration" --tb=short
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Run E2E tests
      run: |
        uv run pytest tests/ -v -m "e2e" --tb=short
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Run all tests with coverage
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      run: |
        uv run pytest tests/ --cov=ai_sleepwalker --cov-report=xml --cov-report=html

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true